{"ast":null,"code":"/*!\n * Retina.js v1.1.0\n *\n * Copyright 2013 Imulus, LLC\n * Released under the MIT license\n *\n * Retina.js is an open source script that makes it easy to serve\n * high-resolution images to devices with retina displays.\n */\n(function () {\n  var root = typeof exports == \"undefined\" ? window : exports;\n  var config = {\n    check_mime_type: true\n  };\n  root.Retina = Retina;\n\n  function Retina() {}\n\n  Retina.configure = function (options) {\n    if (options == null) options = {};\n\n    for (var prop in options) {\n      config[prop] = options[prop];\n    }\n  };\n\n  Retina.init = function (context) {\n    if (context == null) context = root;\n    var existing_onload = context.onload || new Function();\n\n    context.onload = function () {\n      var images = document.getElementsByTagName(\"img\"),\n          retinaImages = [],\n          i,\n          image;\n\n      for (i = 0; i < images.length; i++) {\n        image = images[i];\n        retinaImages.push(new RetinaImage(image));\n      }\n\n      existing_onload();\n    };\n  };\n\n  Retina.isRetina = function () {\n    var mediaQuery = \"(-webkit-min-device-pixel-ratio: 1.5),                      (min--moz-device-pixel-ratio: 1.5),                      (-o-min-device-pixel-ratio: 3/2),                      (min-resolution: 1.5dppx)\";\n    if (root.devicePixelRatio > 1) return true;\n    if (root.matchMedia && root.matchMedia(mediaQuery).matches) return true;\n    return false;\n  };\n\n  root.RetinaImagePath = RetinaImagePath;\n\n  function RetinaImagePath(path, at_2x_path) {\n    this.path = path;\n\n    if (typeof at_2x_path !== \"undefined\" && at_2x_path !== null) {\n      this.at_2x_path = at_2x_path;\n      this.perform_check = false;\n    } else {\n      this.at_2x_path = path.replace(/\\.\\w+$/, function (match) {\n        return \"@2x\" + match;\n      });\n      this.perform_check = true;\n    }\n  }\n\n  RetinaImagePath.confirmed_paths = [];\n\n  RetinaImagePath.prototype.is_external = function () {\n    return !!(this.path.match(/^https?\\:/i) && !this.path.match(\"//\" + document.domain));\n  };\n\n  RetinaImagePath.prototype.check_2x_variant = function (callback) {\n    var http,\n        that = this;\n\n    if (this.is_external()) {\n      return callback(false);\n    } else if (!this.perform_check && typeof this.at_2x_path !== \"undefined\" && this.at_2x_path !== null) {\n      return callback(true);\n    } else if (this.at_2x_path in RetinaImagePath.confirmed_paths) {\n      return callback(true);\n    } else {\n      http = new XMLHttpRequest();\n      http.open(\"HEAD\", this.at_2x_path);\n\n      http.onreadystatechange = function () {\n        if (http.readyState != 4) {\n          return callback(false);\n        }\n\n        if (http.status >= 200 && http.status <= 399) {\n          if (config.check_mime_type) {\n            var type = http.getResponseHeader(\"Content-Type\");\n\n            if (type == null || !type.match(/^image/i)) {\n              return callback(false);\n            }\n          }\n\n          RetinaImagePath.confirmed_paths.push(that.at_2x_path);\n          return callback(true);\n        } else {\n          return callback(false);\n        }\n      };\n\n      http.send();\n    }\n  };\n\n  function RetinaImage(el) {\n    this.el = el;\n    this.path = new RetinaImagePath(this.el.getAttribute(\"src\"), this.el.getAttribute(\"data-at2x\"));\n    var that = this;\n    this.path.check_2x_variant(function (hasVariant) {\n      if (hasVariant) that.swap();\n    });\n  }\n\n  root.RetinaImage = RetinaImage;\n\n  RetinaImage.prototype.swap = function (path) {\n    if (typeof path == \"undefined\") path = this.path.at_2x_path;\n    var that = this;\n\n    function load() {\n      if (!that.el.complete) {\n        setTimeout(load, 5);\n      } else {\n        that.el.setAttribute(\"width\", that.el.offsetWidth);\n        that.el.setAttribute(\"height\", that.el.offsetHeight);\n        that.el.setAttribute(\"src\", path);\n      }\n    }\n\n    load();\n  };\n\n  if (Retina.isRetina()) {\n    Retina.init(root);\n  }\n})();","map":{"version":3,"sources":["/Users/david/Desktop/tailwind/winner_stock/app/javascript/packs/retina.min.js"],"names":["root","exports","window","config","check_mime_type","Retina","configure","options","prop","init","context","existing_onload","onload","Function","images","document","getElementsByTagName","retinaImages","i","image","length","push","RetinaImage","isRetina","mediaQuery","devicePixelRatio","matchMedia","matches","RetinaImagePath","path","at_2x_path","perform_check","replace","match","confirmed_paths","prototype","is_external","domain","check_2x_variant","callback","http","that","XMLHttpRequest","open","onreadystatechange","readyState","status","type","getResponseHeader","send","el","getAttribute","hasVariant","swap","load","complete","setTimeout","setAttribute","offsetWidth","offsetHeight"],"mappings":"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","sourcesContent":["/*!\n * Retina.js v1.1.0\n *\n * Copyright 2013 Imulus, LLC\n * Released under the MIT license\n *\n * Retina.js is an open source script that makes it easy to serve\n * high-resolution images to devices with retina displays.\n */\n(function(){var root=typeof exports==\"undefined\"?window:exports;var config={check_mime_type:true};root.Retina=Retina;function Retina(){}Retina.configure=function(options){if(options==null)options={};for(var prop in options)config[prop]=options[prop]};Retina.init=function(context){if(context==null)context=root;var existing_onload=context.onload||new Function;context.onload=function(){var images=document.getElementsByTagName(\"img\"),retinaImages=[],i,image;for(i=0;i<images.length;i++){image=images[i];retinaImages.push(new RetinaImage(image))}existing_onload()}};Retina.isRetina=function(){var mediaQuery=\"(-webkit-min-device-pixel-ratio: 1.5),                      (min--moz-device-pixel-ratio: 1.5),                      (-o-min-device-pixel-ratio: 3/2),                      (min-resolution: 1.5dppx)\";if(root.devicePixelRatio>1)return true;if(root.matchMedia&&root.matchMedia(mediaQuery).matches)return true;return false};root.RetinaImagePath=RetinaImagePath;function RetinaImagePath(path,at_2x_path){this.path=path;if(typeof at_2x_path!==\"undefined\"&&at_2x_path!==null){this.at_2x_path=at_2x_path;this.perform_check=false}else{this.at_2x_path=path.replace(/\\.\\w+$/,function(match){return\"@2x\"+match});this.perform_check=true}}RetinaImagePath.confirmed_paths=[];RetinaImagePath.prototype.is_external=function(){return!!(this.path.match(/^https?\\:/i)&&!this.path.match(\"//\"+document.domain))};RetinaImagePath.prototype.check_2x_variant=function(callback){var http,that=this;if(this.is_external()){return callback(false)}else if(!this.perform_check&&typeof this.at_2x_path!==\"undefined\"&&this.at_2x_path!==null){return callback(true)}else if(this.at_2x_path in RetinaImagePath.confirmed_paths){return callback(true)}else{http=new XMLHttpRequest;http.open(\"HEAD\",this.at_2x_path);http.onreadystatechange=function(){if(http.readyState!=4){return callback(false)}if(http.status>=200&&http.status<=399){if(config.check_mime_type){var type=http.getResponseHeader(\"Content-Type\");if(type==null||!type.match(/^image/i)){return callback(false)}}RetinaImagePath.confirmed_paths.push(that.at_2x_path);return callback(true)}else{return callback(false)}};http.send()}};function RetinaImage(el){this.el=el;this.path=new RetinaImagePath(this.el.getAttribute(\"src\"),this.el.getAttribute(\"data-at2x\"));var that=this;this.path.check_2x_variant(function(hasVariant){if(hasVariant)that.swap()})}root.RetinaImage=RetinaImage;RetinaImage.prototype.swap=function(path){if(typeof path==\"undefined\")path=this.path.at_2x_path;var that=this;function load(){if(!that.el.complete){setTimeout(load,5)}else{that.el.setAttribute(\"width\",that.el.offsetWidth);that.el.setAttribute(\"height\",that.el.offsetHeight);that.el.setAttribute(\"src\",path)}}load()};if(Retina.isRetina()){Retina.init(root)}})();"]},"metadata":{},"sourceType":"module"}